{
	"info": {
		"_postman_id": "4db0a420-bedc-481c-b365-70d608cde026",
		"name": "Interledger",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_uid": "23674746-4db0a420-bedc-481c-b365-70d608cde026"
	},
	"item": [
		{
			"name": "Rafiki Admin APIs",
			"item": [
				{
					"name": "Create Asset",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const body = pm.response.json();",
									"",
									"pm.environment.set(\"assetId\", body.data.createAsset.asset.id);"
								],
								"type": "text/javascript",
								"id": "6befffc3-4233-4652-aec6-33eec5ae8297"
							}
						}
					],
					"id": "a783a726-4ec0-49a8-a0c0-14de27441876",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql"
						},
						"url": {
							"raw": "{{RafikiGraphqlHost}}/graphql",
							"host": [
								"{{RafikiGraphqlHost}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Asset",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"id": "c91b69c3-fc8c-4c5c-b0d6-fa0ce72bd601"
							}
						}
					],
					"id": "3611244b-1fdf-4126-ae4a-72f8deb5c6e1",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql"
						},
						"url": {
							"raw": "{{RafikiGraphqlHost}}/graphql",
							"host": [
								"{{RafikiGraphqlHost}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Asset",
					"id": "c2ace250-e56b-4c22-a4f2-089c21d64235",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql"
						},
						"url": {
							"raw": "{{RafikiGraphqlHost}}/graphql",
							"host": [
								"{{RafikiGraphqlHost}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Assets",
					"id": "c79c2c04-ec2c-4d30-b2bd-f96a90ff0312",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql"
						},
						"url": {
							"raw": "{{RafikiGraphqlHost}}/graphql",
							"host": [
								"{{RafikiGraphqlHost}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Deposit Asset Liquidity",
					"id": "450b51bd-048f-4653-8088-dca822ffae3b",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql"
						},
						"url": {
							"raw": "{{RafikiGraphqlHost}}/graphql",
							"host": [
								"{{RafikiGraphqlHost}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Withdraw Asset Liquidity",
					"id": "cbe4dd05-eb2e-4b82-8dbf-7c2a22465dba",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql"
						},
						"url": {
							"raw": "{{RafikiGraphqlHost}}/graphql",
							"host": [
								"{{RafikiGraphqlHost}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Set Fee",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"id": "2cdf7915-356e-44d8-881e-606fc3f432b3"
							}
						}
					],
					"id": "67df21e7-c80b-44de-a301-aad441d29be9",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql"
						},
						"url": {
							"raw": "{{RafikiGraphqlHost}}/graphql",
							"host": [
								"{{RafikiGraphqlHost}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Peer",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const body = pm.response.json();",
									"",
									"pm.environment.set(\"peerId\", body.data.createPeer.peer.id);"
								],
								"type": "text/javascript",
								"id": "80bdb9a1-cd53-4d06-b21c-7b72b73c7136"
							}
						}
					],
					"id": "e6b2bae3-5156-436c-a6a1-093c3d11c36c",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql"
						},
						"url": {
							"raw": "{{RafikiGraphqlHost}}/graphql",
							"host": [
								"{{RafikiGraphqlHost}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Or Update Peer By Url",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const body = pm.response.json();",
									"",
									"pm.environment.set(\"peerId\", body.data.createOrUpdatePeerByUrl.peer.id);"
								],
								"type": "text/javascript",
								"id": "434b30ad-4b75-4a46-9835-475f4f1ddd6b"
							}
						}
					],
					"id": "3f737743-ff11-4b14-a5fc-ad0cfa861082",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql"
						},
						"url": {
							"raw": "{{RafikiGraphqlHost}}/graphql",
							"host": [
								"{{RafikiGraphqlHost}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Peer",
					"id": "ea9e9d4e-8f36-4314-9bf0-aae75523bba0",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql"
						},
						"url": {
							"raw": "{{RafikiGraphqlHost}}/graphql",
							"host": [
								"{{RafikiGraphqlHost}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Peer",
					"id": "6a4af432-8e6f-4e88-a89a-44073abd4967",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql"
						},
						"url": {
							"raw": "{{RafikiGraphqlHost}}/graphql",
							"host": [
								"{{RafikiGraphqlHost}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Peers",
					"id": "f5fe05b5-6020-4477-8eb5-13cc20b51a2f",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql"
						},
						"url": {
							"raw": "{{RafikiGraphqlHost}}/graphql",
							"host": [
								"{{RafikiGraphqlHost}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Peer",
					"id": "0f23988b-8db6-4534-b7a5-8a4b2765ed60",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql"
						},
						"url": {
							"raw": "{{RafikiGraphqlHost}}/graphql",
							"host": [
								"{{RafikiGraphqlHost}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Deposit Peer Liquidity",
					"id": "4744b660-1e1f-4d9f-b6a3-46ab04bffbc0",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql"
						},
						"url": {
							"raw": "{{RafikiGraphqlHost}}/graphql",
							"host": [
								"{{RafikiGraphqlHost}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Withdraw Peer Liquidity",
					"id": "e8b3059e-6367-45f1-be2a-cab0fed00a12",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql"
						},
						"url": {
							"raw": "{{RafikiGraphqlHost}}/graphql",
							"host": [
								"{{RafikiGraphqlHost}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Post Liquidity Withdrawal",
					"id": "db48b36d-d431-4641-a77d-14231419cdd8",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql"
						},
						"url": {
							"raw": "{{RafikiGraphqlHost}}/graphql",
							"host": [
								"{{RafikiGraphqlHost}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Void Liquidity Withdrawal",
					"id": "b7db6a84-bd5c-4252-918d-52ee98ef5f36",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql"
						},
						"url": {
							"raw": "{{RafikiGraphqlHost}}/graphql",
							"host": [
								"{{RafikiGraphqlHost}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Wallet Address",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const body = pm.response.json();",
									"",
									"pm.environment.set(\"walletAddressId\", body.data.createWalletAddress.walletAddress.id);",
									"pm.expect(pm.environment.get(\"walletAddressId\")).to.be.a('string');",
									"",
									"pm.environment.set(\"walletAddressUrl\", body.data.createWalletAddress.walletAddress.url);",
									"pm.expect(pm.environment.get(\"walletAddressUrl\")).to.be.a('string');",
									"",
									"pm.environment.set(\"createWalletAddressRequest\", pm.request);"
								],
								"type": "text/javascript",
								"id": "6ef94532-46fa-4e63-9a17-586e152f7b02"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"id": "b155b4be-5134-4e1f-8a52-14ea9a4f4e5d"
							}
						}
					],
					"id": "1605ef0d-1458-417c-a4e3-b34681d44288",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql"
						},
						"url": {
							"raw": "{{RafikiGraphqlHost}}/graphql",
							"host": [
								"{{RafikiGraphqlHost}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Wallet Address",
					"id": "9a0bee3f-718e-4493-b02b-3b0e391238f7",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql"
						},
						"url": {
							"raw": "{{RafikiGraphqlHost}}/graphql",
							"host": [
								"{{RafikiGraphqlHost}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Wallet Address",
					"id": "28e0275f-4548-47ca-aec3-c97c95f1a13e",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql"
						},
						"url": {
							"raw": "{{RafikiGraphqlHost}}/graphql",
							"host": [
								"{{RafikiGraphqlHost}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Wallet Addresses",
					"id": "e69e81c6-535e-4b97-8b11-08a776b577a3",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql"
						},
						"url": {
							"raw": "{{RafikiGraphqlHost}}/graphql",
							"host": [
								"{{RafikiGraphqlHost}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Wallet Address Key",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const body = pm.response.json();",
									"",
									"pm.environment.set(\"walletAddressKeyId\", body.data.createWalletAddressKey.walletAddressKey.id);"
								],
								"type": "text/javascript",
								"id": "dc09e186-1d31-46a6-bccf-32227ef0ccb3"
							}
						}
					],
					"id": "f303ffb9-47b6-4e8c-8086-fef411c613a0",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql"
						},
						"url": {
							"raw": "{{RafikiGraphqlHost}}/graphql",
							"host": [
								"{{RafikiGraphqlHost}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Revoke Wallet Address Key",
					"id": "d7d453be-afc1-4bf9-a227-0be768a88bb2",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql"
						},
						"url": {
							"raw": "{{RafikiGraphqlHost}}/graphql",
							"host": [
								"{{RafikiGraphqlHost}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Incoming Payment",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const body = pm.response.json();",
									"",
									"pm.environment.set(\"incomingPaymentId\", body.data.createIncomingPayment.payment.id);",
									"pm.expect(pm.environment.get(\"incomingPaymentId\")).to.be.a('string');"
								],
								"type": "text/javascript",
								"id": "a7b77f8d-d52e-41f1-81e9-d07ed5fc486d"
							}
						}
					],
					"id": "8580b235-4f28-4198-a8b2-22b06b72a5f7",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql"
						},
						"url": {
							"raw": "{{RafikiGraphqlHost}}/graphql",
							"host": [
								"{{RafikiGraphqlHost}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Incoming Payment",
					"id": "ae95d992-cf76-41ba-911d-61bb178f4a66",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql"
						},
						"url": {
							"raw": "{{RafikiGraphqlHost}}/graphql",
							"host": [
								"{{RafikiGraphqlHost}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Receiver (remote Incoming Payment)",
					"id": "3b25833e-2206-4402-84bb-ff9d2b3fdc40",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql"
						},
						"url": {
							"raw": "{{RafikiGraphqlHost}}/graphql",
							"host": [
								"{{RafikiGraphqlHost}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Quote",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const body = pm.response.json();",
									"",
									"pm.environment.set(\"quoteId\", body.data.createQuote.quote.id);",
									"pm.expect(pm.environment.get(\"quoteId\")).to.be.a('string');"
								],
								"type": "text/javascript",
								"id": "a6880947-dc45-4d78-9dab-20268bfdfb1f"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// Create an additional wallet address to represent the account that will be sending money",
									"",
									"// Reset the uniqueWalletAddress value",
									"pm.environment.set(\"uniqueWalletAddress\", Math.floor(Math.random() * (1001)));",
									"",
									"const initialRequest = pm.environment.get(\"createWalletAddressRequest\");",
									"",
									"const postRequest = {",
									"  url: initialRequest.url,",
									"  method: initialRequest.method,",
									"  body: {",
									"    mode: 'graphql',",
									"    graphql: {",
									"        query: initialRequest.body.graphql.query,",
									"        variables: JSON.stringify({",
									"            \"input\": {",
									"                \"assetId\": pm.environment.get(\"assetId\"),",
									"                \"url\": \"https://\" + pm.environment.get(\"OpenPaymentsHost\") + \"/simon/\" + pm.environment.get(\"uniqueWalletAddress\"),",
									"                \"publicName\": \"Simon\"",
									"            }",
									"        })",
									"    }",
									"  }",
									"};",
									"",
									"pm.sendRequest(postRequest, (error, response) => {",
									"    if (error) {",
									"        console.log(error);",
									"    }",
									"    const body = response.json();",
									"    pm.test('response should be okay to process', () => {",
									"        pm.expect(error).to.equal(null);",
									"        pm.expect(body.data.createWalletAddress.code).to.equal('200');",
									"        pm.expect(body.data.createWalletAddress.success).to.equal(true);",
									"    });",
									"    pm.environment.set(\"secondWalletAddressId\", body.data.createWalletAddress.walletAddress.id);",
									"});"
								],
								"type": "text/javascript",
								"id": "f92133b6-e0c4-4630-8d4f-a5e31194fbe1"
							}
						}
					],
					"id": "df12a128-e584-4588-a811-f125cb2b0791",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql"
						},
						"url": {
							"raw": "{{RafikiGraphqlHost}}/graphql",
							"host": [
								"{{RafikiGraphqlHost}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Quote",
					"id": "fae79423-0a3a-4a2c-85c6-ff6a2168cf1d",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql"
						},
						"url": {
							"raw": "{{RafikiGraphqlHost}}/graphql",
							"host": [
								"{{RafikiGraphqlHost}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Outgoing Payment",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const body = pm.response.json();",
									"",
									"pm.environment.set(\"outgoingPaymentId\", body.data.createOutgoingPayment.payment.id);",
									"pm.expect(pm.environment.get(\"outgoingPaymentId\")).to.be.a('string');"
								],
								"type": "text/javascript",
								"id": "8bc93189-0261-42a3-b14d-8a3339b399c8"
							}
						}
					],
					"id": "90fad3db-f479-4c9f-8f7b-88aeef018e02",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql"
						},
						"url": {
							"raw": "{{RafikiGraphqlHost}}/graphql",
							"host": [
								"{{RafikiGraphqlHost}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Outgoing Payment",
					"id": "57f10407-f7b6-4983-a80a-01249d04426f",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql"
						},
						"url": {
							"raw": "{{RafikiGraphqlHost}}/graphql",
							"host": [
								"{{RafikiGraphqlHost}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Payments",
					"id": "bfe7aff1-be86-4e80-a40a-241f2c7ccf5f",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql"
						},
						"url": {
							"raw": "{{RafikiGraphqlHost}}/graphql",
							"host": [
								"{{RafikiGraphqlHost}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Deposit Event Liquidity",
					"id": "d378ce7f-1ebf-46d5-9f57-47189f430e6a",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql"
						},
						"url": {
							"raw": "{{RafikiGraphqlHost}}/graphql",
							"host": [
								"{{RafikiGraphqlHost}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Deposit Outgoing Payment Liquidity",
					"id": "4d46344e-da63-4f74-919d-4efcdc96fe64",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql"
						},
						"url": {
							"raw": "{{RafikiGraphqlHost}}/graphql",
							"host": [
								"{{RafikiGraphqlHost}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Withdraw Event Liquidity",
					"id": "bbc9bfe1-8c0f-44a2-bfdd-113c5d3129ca",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql"
						},
						"url": {
							"raw": "{{RafikiGraphqlHost}}/graphql",
							"host": [
								"{{RafikiGraphqlHost}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Withdraw Incoming Payment Liquidity",
					"id": "c125a20a-b772-4c0f-a4e0-e4925fff2a9c",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql"
						},
						"url": {
							"raw": "{{PeerGraphqlHost}}/graphql",
							"host": [
								"{{PeerGraphqlHost}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Withdraw Outgoing Payment Liquidity",
					"id": "e5e998e9-f492-4fd6-9de9-e0db099b8424",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql"
						},
						"url": {
							"raw": "{{RafikiGraphqlHost}}/graphql",
							"host": [
								"{{RafikiGraphqlHost}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Wallet Address Withdrawal",
					"id": "2f80a568-3f62-4db5-9594-ec5751df630d",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql"
						},
						"url": {
							"raw": "{{RafikiGraphqlHost}}/graphql",
							"host": [
								"{{RafikiGraphqlHost}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Trigger Wallet Address Events",
					"id": "2b89f1df-1470-4160-bf9f-f4d4768f9ee9",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql"
						},
						"url": {
							"raw": "{{RafikiGraphqlHost}}/graphql",
							"host": [
								"{{RafikiGraphqlHost}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Webhook Events",
					"id": "0a848aa2-dae9-43eb-bcbc-8efe3a8531f7",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql"
						},
						"url": {
							"raw": "{{RafikiGraphqlHost}}/graphql",
							"host": [
								"{{RafikiGraphqlHost}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Receiver (remote incoming payment) Copy",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"id": "a6498685-f5ac-4d62-9e04-2554bef47afa"
							}
						}
					],
					"id": "7695e450-ae0d-4199-8cc1-a1334028d815",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql"
						},
						"url": {
							"raw": "{{RafikiGraphqlHost}}/graphql",
							"host": [
								"{{RafikiGraphqlHost}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				}
			],
			"id": "dc0ca4bb-2f2f-4f01-b7c6-ac4ad274af72"
		},
		{
			"name": "Rafiki Admin Auth APIs",
			"item": [
				{
					"name": "Get Grant",
					"id": "73876ce7-6517-42c0-83a8-efad6e18c78f",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql"
						},
						"url": {
							"raw": "{{RafikiAuthGraphqlHost}}/graphql",
							"host": [
								"{{RafikiAuthGraphqlHost}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Grants",
					"id": "e61328c8-d291-4adc-a0b1-5ef5160b8691",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql"
						},
						"url": {
							"raw": "{{RafikiAuthGraphqlHost}}/graphql",
							"host": [
								"{{RafikiAuthGraphqlHost}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Revoke Grant",
					"id": "b51a5456-95d0-48fa-82ee-b069ba053e25",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql"
						},
						"url": {
							"raw": "{{RafikiAuthGraphqlHost}}/graphql",
							"host": [
								"{{RafikiAuthGraphqlHost}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				}
			],
			"id": "af800b78-2194-4cc8-a1f4-c5908fc1121f"
		},
		{
			"name": "Open Payments APIs",
			"item": [
				{
					"name": "Wallet Address",
					"item": [
						{
							"name": "Get a Wallet Address",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"const body = pm.response.json();",
											"pm.environment.set(\"receiverAssetCode\", body?.assetCode)",
											"pm.environment.set(\"receiverAssetScale\", body?.assetScale)",
											"",
											"const authUrl = url.parse(body?.authServer)",
											"if (",
											"    authUrl.hostname.includes('cloud-nine-wallet') || ",
											"    authUrl.hostname.includes('happy-life-bank')",
											"){",
											"    const port = authUrl.hostname.includes('cloud-nine-wallet') ",
											"        ? authUrl.port",
											"        : Number(authUrl.port) + 1000",
											"    pm.environment.set(\"receiverOpenPaymentsAuthHost\", authUrl.protocol + '//localhost:' + port );",
											"} else {",
											"    pm.environment.set(\"receiverOpenPaymentsAuthHost\", body?.authServer);",
											"}"
										],
										"type": "text/javascript",
										"id": "052a6f55-2530-4ba3-9e8e-3141ee260ec0"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"if(pm.environment.get('preRequestHost')){",
											"    eval(pm.environment.get('preRequestHost'))",
											"}"
										],
										"type": "text/javascript",
										"id": "ac578ecd-7a8b-414b-a900-83bff7f280e6"
									}
								}
							],
							"id": "3644c871-81b6-4f44-8a0a-cba96fdbf56c",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{receiverWalletAddress}}",
									"host": [
										"{{receiverWalletAddress}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Wallet Address Keys",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"if(pm.environment.get('preRequestHost')){",
											"    eval(pm.environment.get('preRequestHost'))",
											"}"
										],
										"type": "text/javascript",
										"id": "ed920187-353e-46ca-8037-ea50fc3c2aed"
									}
								}
							],
							"id": "782316e1-0865-4623-8c35-92e451261c56",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Host",
										"value": "happy-life-bank-backend"
									}
								],
								"url": {
									"raw": "{{receiverWalletAddress}}/jwks.json",
									"host": [
										"{{receiverWalletAddress}}"
									],
									"path": [
										"jwks.json"
									]
								}
							},
							"response": []
						}
					],
					"id": "8cb7fc91-e871-48dc-8d25-9d9a2d417941"
				},
				{
					"name": "Incoming Payments",
					"item": [
						{
							"name": "Create Incoming Payment",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.set(\"tomorrow\", (new Date(new Date().setDate(new Date().getDate() + 1))).toISOString());",
											"",
											"if(pm.environment.get('preRequestHost')){",
											"    eval(pm.environment.get('preRequestHost'))",
											"}",
											"eval(pm.environment.get('preRequestSignatures'))"
										],
										"type": "text/javascript",
										"id": "ce0ac6e6-bdbb-4be7-a3ca-6e7f6f0daf3c"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"const body = pm.response.json();",
											"pm.environment.set(\"incomingPaymentId\", body.id.split(\"/\").pop());",
											""
										],
										"type": "text/javascript",
										"id": "c365026b-645a-4ebc-8f5e-bfa3e04ee267"
									}
								}
							],
							"id": "d380e955-e4cf-4f76-9603-e01635611740",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "GNAP {{accessToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"walletAddress\": \"{{clientWalletAddress}}\",\n    \"incomingAmount\": {\n        \"value\": \"2000\",\n        \"assetCode\": \"USD\",\n        \"assetScale\": 2\n    },\n    \"expiresAt\": \"{{tomorrow}}\",\n    \"metadata\": {\n        \"description\": \"Incoming Payment on Own Account\",\n        \"externalRef\": \"INV-001\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{receiverOpenPaymentsHost}}/incoming-payments",
									"host": [
										"{{receiverOpenPaymentsHost}}"
									],
									"path": [
										"incoming-payments"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Incoming Payment",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											""
										],
										"type": "text/javascript",
										"id": "313a3ad5-4b80-4785-93f3-f50b2edeb930"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"if(pm.environment.get('preRequestHost')){",
											"    eval(pm.environment.get('preRequestHost'))",
											"}",
											"eval(pm.environment.get('preRequestSignatures'))"
										],
										"type": "text/javascript",
										"id": "22a34802-e5cb-47e8-8d2a-b39ba3cad290"
									}
								}
							],
							"id": "bc38dcad-d03f-45ad-8db7-fa9da8731afb",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "GNAP {{accessToken}}"
									}
								],
								"url": {
									"raw": "{{receiverOpenPaymentsHost}}/incoming-payments/{{incomingPaymentId}}",
									"host": [
										"{{receiverOpenPaymentsHost}}"
									],
									"path": [
										"incoming-payments",
										"{{incomingPaymentId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Incoming Payment (Unauthenticated)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											""
										],
										"type": "text/javascript",
										"id": "79da6e1c-16af-40a6-b677-ce010e6e74c9"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"id": "b1fda273-97bd-423e-91e1-64bc2a85545f"
									}
								}
							],
							"id": "153d6210-e0e4-424f-a356-9a08dcb20cc6",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "GNAP {{accessToken}}",
										"disabled": true
									},
									{
										"key": "Host",
										"value": "happy-life-bank-backend"
									}
								],
								"url": {
									"raw": "{{receiverOpenPaymentsHost}}/incoming-payments/{{incomingPaymentId}}",
									"host": [
										"{{receiverOpenPaymentsHost}}"
									],
									"path": [
										"incoming-payments",
										"{{incomingPaymentId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "List Incoming Payments",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											""
										],
										"type": "text/javascript",
										"id": "5fe7cc89-565c-402f-a3e8-cfa435e47f89"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"request.url = request.url",
											"    .replace(/{{(receiverWalletAddress)}}/g, (_, key) => pm.environment.get(key))",
											"    .replace(/http:\\/\\/localhost:([3,4])000/g, (_, key) =>",
											"          key === '3'",
											"            ? 'https://' + pm.environment.get('host3000')",
											"            : 'https://' + pm.environment.get('host4000')",
											"    )",
											"console.log(request.url)",
											"",
											"if(pm.environment.get('preRequestHost')){",
											"    eval(pm.environment.get('preRequestHost'))",
											"}",
											"eval(pm.environment.get('preRequestSignatures'))",
											"",
											"pm.request.url.query.idx(2).value = pm.request.url.query.idx(2).value",
											"    .replace(/{{([A-Za-z]\\w+)}}/g, (_, key) => pm.environment.get(key))",
											"    .replace(/http:\\/\\/localhost:([3,4])000/g, (_, key) =>",
											"          key === '3'",
											"            ? 'https://' + pm.environment.get('host3000')",
											"            : 'https://' + pm.environment.get('host4000')",
											"    )",
											""
										],
										"type": "text/javascript",
										"id": "ead744d8-2fb4-4ac1-9641-4153eeb4f63c"
									}
								}
							],
							"id": "0624275c-d4a3-42b6-91bc-3c2263120297",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "GNAP {{accessToken}}"
									}
								],
								"url": {
									"raw": "{{receiverOpenPaymentsHost}}/incoming-payments?first=10&wallet-address={{receiverWalletAddress}}",
									"host": [
										"{{receiverOpenPaymentsHost}}"
									],
									"path": [
										"incoming-payments"
									],
									"query": [
										{
											"key": "first",
											"value": "10"
										},
										{
											"key": "cursor",
											"value": "ea3bf38f-2719-4473-a0f7-4ba967d1d81b",
											"disabled": true
										},
										{
											"key": "wallet-address",
											"value": "{{receiverWalletAddress}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Complete Incoming Payment",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"if(pm.environment.get('preRequestHost')){",
											"    eval(pm.environment.get('preRequestHost'))",
											"}",
											"eval(pm.environment.get('preRequestSignatures'))"
										],
										"type": "text/javascript",
										"id": "585af449-b727-4884-a141-2d78bc59c399"
									}
								}
							],
							"id": "3b5bb80d-481c-4eea-95cf-e6ced96750a2",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "GNAP {{accessToken}}"
									},
									{
										"key": "Host",
										"value": "happy-life-bank-backend",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{receiverOpenPaymentsHost}}/incoming-payments/{{incomingPaymentId}}/complete",
									"host": [
										"{{receiverOpenPaymentsHost}}"
									],
									"path": [
										"incoming-payments",
										"{{incomingPaymentId}}",
										"complete"
									]
								}
							},
							"response": []
						}
					],
					"id": "25a840a3-7676-4595-90b0-e7cf67c20377"
				},
				{
					"name": "Quotes",
					"item": [
						{
							"name": "Create Quote",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"const body = pm.response.json();",
											"pm.environment.set(\"quoteId\", body.id.split(\"/\").pop());",
											""
										],
										"type": "text/javascript",
										"id": "e2cab0b6-4325-4bec-b9c8-6b0a08146a40"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"if(pm.environment.get('preRequestHost')){",
											"    eval(pm.environment.get('preRequestHost'))",
											"}",
											"eval(pm.environment.get('preRequestSignatures'))"
										],
										"type": "text/javascript",
										"id": "a8c70650-c0da-429d-80c8-5b89940da695"
									}
								}
							],
							"id": "854ecd57-e720-4c3b-8188-21be7ce5fe7d",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "GNAP {{accessToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"receiver\": \"{{receiverOpenPaymentsHost}}/incoming-payments/{{incomingPaymentId}}\",\n    \"walletAddress\": \"{{senderWalletAddress}}\",\n    \"debitAmount\": {\n        \"value\": \"1000\",\n        \"assetCode\": \"{{receiverAssetCode}}\",\n        \"assetScale\": {{receiverAssetScale}}\n    },\n    \"method\": \"ilp\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{senderOpenPaymentsHost}}/quotes",
									"host": [
										"{{senderOpenPaymentsHost}}"
									],
									"path": [
										"quotes"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Quote",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											""
										],
										"type": "text/javascript",
										"id": "ef404e3c-900a-46a1-8602-76cb88561c6b"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"if(pm.environment.get('preRequestHost')){",
											"    eval(pm.environment.get('preRequestHost'))",
											"}",
											"eval(pm.environment.get('preRequestSignatures'))"
										],
										"type": "text/javascript",
										"id": "ab278637-d527-45c7-9cbe-55edd7f36af7"
									}
								}
							],
							"id": "2e214f3d-676b-4bda-890c-c1a9bebdb0f6",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "GNAP {{accessToken}}"
									},
									{
										"key": "Host",
										"value": "cloud-nine-wallet-backend",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{senderOpenPaymentsHost}}/quotes/{{quoteId}}",
									"host": [
										"{{senderOpenPaymentsHost}}"
									],
									"path": [
										"quotes",
										"{{quoteId}}"
									]
								}
							},
							"response": []
						}
					],
					"id": "bfe1bb67-815d-4343-8684-952be5e10e3d"
				},
				{
					"name": "Outgoing Payments",
					"item": [
						{
							"name": "Create Outgoing Payment",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"if(pm.environment.get('preRequestHost')){",
											"    eval(pm.environment.get('preRequestHost'))",
											"}",
											"eval(pm.environment.get('preRequestSignatures'))"
										],
										"type": "text/javascript",
										"id": "24a8522e-5377-4787-8487-7dd20274b313"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"const body = pm.response.json();",
											"pm.environment.set(\"outgoingPaymentId\", body.id.split(\"/\").pop());",
											""
										],
										"type": "text/javascript",
										"id": "ea4ccace-1ee6-4725-a400-0aa53c3245a2"
									}
								}
							],
							"id": "c2bbd5e4-c88d-4f86-bcdf-5ad27ee1333a",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "GNAP {{accessToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"walletAddress\": {{senderWalletAddress}},\n    \"quoteId\": \"{{senderOpenPaymentsHost}}/quotes/{{quoteId}}\",\n    \"metadata\": {\n        \"description\": \"yolo\",\n        \"externalRef\": \"INV-001\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{senderOpenPaymentsHost}}/outgoing-payments",
									"host": [
										"{{senderOpenPaymentsHost}}"
									],
									"path": [
										"outgoing-payments"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Outgoing Payment",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											""
										],
										"type": "text/javascript",
										"id": "e07ffc43-29ba-4601-859e-c28ba166dc11"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"if(pm.environment.get('preRequestHost')){",
											"    eval(pm.environment.get('preRequestHost'))",
											"}",
											"eval(pm.environment.get('preRequestSignatures'))"
										],
										"type": "text/javascript",
										"id": "51cc7287-edcb-4b7d-96d1-70e20953c85d"
									}
								}
							],
							"id": "c51548b9-79d6-4190-8432-5fa1d47f3e4d",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "GNAP {{accessToken}}"
									}
								],
								"url": {
									"raw": "{{senderOpenPaymentsHost}}/outgoing-payments/{{outgoingPaymentId}}",
									"host": [
										"{{senderOpenPaymentsHost}}"
									],
									"path": [
										"outgoing-payments",
										"{{outgoingPaymentId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "List Outgoing Payments",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											""
										],
										"type": "text/javascript",
										"id": "76418917-686e-4154-890f-1fb216f7d714"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"request.url = request.url",
											"    .replace(/{{(senderWalletAddress)}}/g, (_, key) => pm.environment.get(key))",
											"    .replace(/http:\\/\\/localhost:([3,4])000/g, (_, key) =>",
											"          key === '3'",
											"            ? 'https://' + pm.environment.get('host3000')",
											"            : 'https://' + pm.environment.get('host4000')",
											"    )",
											"console.log(request.url)",
											"",
											"if(pm.environment.get('preRequestHost')){",
											"    eval(pm.environment.get('preRequestHost'))",
											"}",
											"eval(pm.environment.get('preRequestSignatures'))",
											"",
											"pm.request.url.query.idx(2).value = pm.request.url.query.idx(2).value",
											"    .replace(/{{([A-Za-z]\\w+)}}/g, (_, key) => pm.environment.get(key))",
											"    .replace(/http:\\/\\/localhost:([3,4])000/g, (_, key) =>",
											"          key === '3'",
											"            ? 'https://' + pm.environment.get('host3000')",
											"            : 'https://' + pm.environment.get('host4000')",
											"    )",
											""
										],
										"type": "text/javascript",
										"id": "032b1c01-165b-4028-b970-0eb21cdbad83"
									}
								}
							],
							"id": "42b99327-6963-4227-9cae-c75ff2cc1a6e",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "GNAP {{accessToken}}"
									}
								],
								"url": {
									"raw": "{{senderOpenPaymentsHost}}/outgoing-payments?first=2&wallet-address={{senderWalletAddress}}",
									"host": [
										"{{senderOpenPaymentsHost}}"
									],
									"path": [
										"outgoing-payments"
									],
									"query": [
										{
											"key": "first",
											"value": "2"
										},
										{
											"key": "cursor",
											"value": "ea3bf38f-2719-4473-a0f7-4ba967d1d81b",
											"disabled": true
										},
										{
											"key": "wallet-address",
											"value": "{{senderWalletAddress}}"
										}
									]
								}
							},
							"response": []
						}
					],
					"id": "846acc22-1176-4470-ae80-e50b8110d6bb"
				}
			],
			"id": "8c777f93-a0af-4755-8c55-95f8d8c37ea3"
		},
		{
			"name": "Open Payments Auth APIs",
			"item": [
				{
					"name": "Grants",
					"item": [
						{
							"name": "Grant Request",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const body = pm.response.json();",
											"pm.environment.set(\"accessToken\", body?.access_token?.value);",
											"pm.environment.set(\"continueToken\", body.continue.access_token.value);",
											"pm.environment.set(\"continueId\", body.continue.uri.split(\"/\").pop());",
											"pm.environment.set(\"tokenId\", body.access_token.manage.split('/').pop())"
										],
										"type": "text/javascript",
										"id": "725d4241-86d3-4b8f-ba5e-5a8aca1a40ba"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"eval(pm.environment.get('preRequestSignatures'))"
										],
										"type": "text/javascript",
										"id": "0e32b287-7121-4cb1-9cf7-da21189ce05c"
									}
								}
							],
							"id": "857b454b-79ac-4ab8-80d8-55891ba5f130",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"access_token\": {\n        \"access\": [\n            {\n                \"type\": \"quote\",\n                \"actions\": [\n                    \"create\", \"read\"\n                ]\n            },\n            {\n                \"type\": \"outgoing-payment\",\n                \"actions\": [\n                    \"create\", \"read\", \"list\"\n                ],\n                \"identifier\": \"{{senderWalletAddress}}\",\n                \"limits\": {\n                    \"debitAmount\": {\n                        \"value\": \"8000\",\n                        \"assetCode\": \"USD\",\n                        \"assetScale\": 2\n                    },\n                    \"receiveAmount\": {\n                        \"value\": \"8000\",\n                        \"assetCode\": \"USD\",\n                        \"assetScale\": 2\n                    }\n                }\n            }\n        ]\n    },\n    \"client\": \"{{clientWalletAddress}}\",\n    \"interact\": {\n        \"start\": [\n            \"redirect\"\n        ],\n        \"finish\": {\n            \"method\": \"redirect\",\n            \"uri\": \"http://localhost:3030/mock-idp/fake-client\",\n            \"nonce\": \"123\"\n        }\n    }\n}\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{receiverOpenPaymentsAuthHost}}/",
									"host": [
										"{{receiverOpenPaymentsAuthHost}}"
									],
									"path": [
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Continuation Request",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"eval(pm.environment.get('preRequestSignatures'))"
										],
										"type": "text/javascript",
										"id": "35f06395-5037-47a0-b988-e1790a4da9f9"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"const body = pm.response.json();",
											"pm.environment.set(\"accessToken\", body.access_token.value);",
											"pm.environment.set(\"tokenId\", body.access_token.manage.split('/').pop())"
										],
										"type": "text/javascript",
										"id": "12ddf992-9b42-4498-9ffa-a5bc22db9a5e"
									}
								}
							],
							"id": "b14415da-9369-43f0-9824-45d96d344004",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "GNAP {{continueToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n     \"interact_ref\": \"fdfa9202-3e68-4c2a-8049-25135704a1cb\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{receiverOpenPaymentsAuthHost}}/continue/{{continueId}}",
									"host": [
										"{{receiverOpenPaymentsAuthHost}}"
									],
									"path": [
										"continue",
										"{{continueId}}"
									]
								}
							},
							"response": []
						}
					],
					"id": "f9b6e0c6-2cce-4cb1-b1b4-0fc0ee119952"
				},
				{
					"name": "Tokens",
					"item": [
						{
							"name": "Rotate Access Token",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"eval(pm.environment.get('preRequestSignatures'))"
										],
										"type": "text/javascript",
										"id": "101ce3ca-b494-4025-9f24-5ee99bc7c86c"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"const body = pm.response.json();",
											"pm.environment.set(\"accessToken\", body.access_token.value);",
											"pm.environment.set(\"tokenId\", body.access_token.manage.split('/').pop())"
										],
										"type": "text/javascript",
										"id": "b64bf1d1-f15e-4b81-bc82-38c0f3b7d44f"
									}
								}
							],
							"id": "5f9b4300-ff8a-4c5e-a0c3-2dab3eaed672",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "GNAP {{accessToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{receiverOpenPaymentsAuthHost}}/token/{{tokenId}}",
									"host": [
										"{{receiverOpenPaymentsAuthHost}}"
									],
									"path": [
										"token",
										"{{tokenId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Revoke Access Token",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"eval(pm.environment.get('preRequestSignatures'))"
										],
										"type": "text/javascript",
										"id": "c4ee28c3-d4dd-43f7-83a0-f4b053c4cd80"
									}
								}
							],
							"id": "78978feb-3a75-4bed-845e-89e4f1d42c7e",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{receiverOpenPaymentsAuthHost}}/token/{{tokenId}}",
									"host": [
										"{{receiverOpenPaymentsAuthHost}}"
									],
									"path": [
										"token",
										"{{tokenId}}"
									]
								}
							},
							"response": []
						}
					],
					"id": "17686f09-36f1-41c5-9f2c-fb0bc5286523"
				}
			],
			"id": "967fe282-ad1f-427d-9c6a-187fc8fd6926"
		},
		{
			"name": "Examples",
			"item": [
				{
					"name": "Open Payments",
					"item": [
						{
							"name": "Get sender wallet address",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const url = require('url')",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"const body = pm.response.json();",
											"pm.environment.set(\"senderAssetCode\", body?.assetCode)",
											"pm.environment.set(\"senderAssetScale\", body?.assetScale)",
											"",
											"const authUrl = url.parse(body?.authServer)",
											"if (",
											"    authUrl.hostname.includes('cloud-nine-wallet') || ",
											"    authUrl.hostname.includes('happy-life-bank')",
											"){",
											"    const port = authUrl.hostname.includes('cloud-nine-wallet') ",
											"        ? authUrl.port",
											"        : Number(authUrl.port) + 1000",
											"    pm.environment.set(\"senderOpenPaymentsAuthHost\", authUrl.protocol + '//localhost:' + port );",
											"} else {",
											"    pm.environment.set(\"senderOpenPaymentsAuthHost\", body?.authServer);",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"id": "677d6e06-815f-4bea-abfe-df44306ae7da"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const url = require('url')",
											"",
											"const requestUrl = url.parse(request.url",
											"  .replace(/{{([A-Za-z]\\w+)}}/g, (_, key) => pm.environment.get(key)))",
											"",
											"pm.environment.set(\"senderOpenPaymentsHost\", requestUrl.protocol + '//' + requestUrl.host);",
											"",
											"if(pm.environment.get('preRequestHost')){",
											"    eval(pm.environment.get('preRequestHost'))",
											"}"
										],
										"type": "text/javascript",
										"id": "2e237281-f8a1-4db5-b6f6-1b49f61ddd71"
									}
								}
							],
							"id": "c4cb7839-04f3-47ef-9620-ac6f0a86f8ee",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{senderWalletAddress}}",
									"host": [
										"{{senderWalletAddress}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get receiver wallet address",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const url = require('url')",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"const body = pm.response.json();",
											"pm.environment.set(\"receiverAssetCode\", body?.assetCode)",
											"pm.environment.set(\"receiverAssetScale\", body?.assetScale)",
											"",
											"const authUrl = url.parse(body?.authServer)",
											"if (",
											"    authUrl.hostname.includes('cloud-nine-wallet') || ",
											"    authUrl.hostname.includes('happy-life-bank')",
											"){",
											"    const port = authUrl.hostname.includes('cloud-nine-wallet') ",
											"        ? authUrl.port",
											"        : Number(authUrl.port) + 1000",
											"    pm.environment.set(\"receiverOpenPaymentsAuthHost\", authUrl.protocol + '//localhost:' + port );",
											"} else {",
											"    pm.environment.set(\"receiverOpenPaymentsAuthHost\", body?.authServer);",
											"}",
											"",
											""
										],
										"type": "text/javascript",
										"id": "c008b5f2-b8d3-4498-a755-759845f61430"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const url = require('url')",
											"",
											"const requestUrl = url.parse(request.url",
											"  .replace(/{{([A-Za-z]\\w+)}}/g, (_, key) => pm.environment.get(key)))",
											"",
											"pm.environment.set(\"receiverOpenPaymentsHost\", requestUrl.protocol + '//' + requestUrl.host);",
											"",
											"if(pm.environment.get('preRequestHost')){",
											"    eval(pm.environment.get('preRequestHost'))",
											"}"
										],
										"type": "text/javascript",
										"id": "b2db908b-9b39-481e-85a5-a5e091e02f3f"
									}
								}
							],
							"id": "8c0c225d-96f7-4121-b11a-30de1f5b5455",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{receiverWalletAddress}}",
									"host": [
										"{{receiverWalletAddress}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Grant Request Incoming Payment",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const body = pm.response.json();",
											"pm.environment.set(\"accessToken\", body?.access_token?.value);",
											"pm.environment.set(\"continueToken\", body.continue.access_token.value);",
											"pm.environment.set(\"continueId\", body.continue.uri.split(\"/\").pop());",
											"pm.environment.set(\"tokenId\", body.access_token.manage.split('/').pop())"
										],
										"type": "text/javascript",
										"id": "0d756e41-2c25-4365-a9b7-ae00552da89c"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"eval(pm.environment.get('preRequestSignatures'))",
											""
										],
										"type": "text/javascript",
										"id": "56560bb7-68a6-49d2-b0b4-43d36bf82633"
									}
								}
							],
							"id": "52220f0b-1979-4b8a-86ec-e13c713dd11c",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"access_token\": {\n        \"access\": [\n            {\n                \"type\": \"incoming-payment\",\n                \"actions\": [\n                    \"create\", \"read\", \"list\", \"complete\"\n                ]\n            }\n        ]\n    },\n    \"client\": \"{{clientWalletAddress}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{receiverOpenPaymentsAuthHost}}/",
									"host": [
										"{{receiverOpenPaymentsAuthHost}}"
									],
									"path": [
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Incoming Payment",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.set(\"tomorrow\", (new Date(new Date().setDate(new Date().getDate() + 1))).toISOString());",
											"",
											"if(pm.environment.get('preRequestHost')){",
											"    eval(pm.environment.get('preRequestHost'))",
											"}",
											"eval(pm.environment.get('preRequestSignatures'))",
											""
										],
										"type": "text/javascript",
										"id": "55ef8e2f-0346-4edb-bd36-0899cd47dc5e"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"const body = pm.response.json();",
											"pm.environment.set(\"incomingPaymentId\", body.id.split(\"/\").pop());",
											""
										],
										"type": "text/javascript",
										"id": "095342aa-bd92-4ca3-b524-361063732dbd"
									}
								}
							],
							"id": "b64ea9d0-b017-4d54-86cb-e88a52b5183d",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "GNAP {{accessToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"walletAddress\": \"{{receiverWalletAddress}}\",\n    \"incomingAmount\": {\n        \"value\": \"100\",\n        \"assetCode\": \"{{receiverAssetCode}}\",\n        \"assetScale\": {{receiverAssetScale}}\n    },\n    \"expiresAt\": \"{{tomorrow}}\",\n    \"metadata\": {\n        \"description\": \"Free Money!\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{receiverOpenPaymentsHost}}/incoming-payments",
									"host": [
										"{{receiverOpenPaymentsHost}}"
									],
									"path": [
										"incoming-payments"
									]
								}
							},
							"response": []
						},
						{
							"name": "Grant Request Quote",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const body = pm.response.json();",
											"pm.environment.set(\"accessToken\", body?.access_token?.value);",
											"pm.environment.set(\"continueToken\", body.continue.access_token.value);",
											"pm.environment.set(\"continueId\", body.continue.uri.split(\"/\").pop());",
											"pm.environment.set(\"tokenId\", body.access_token.manage.split('/').pop())"
										],
										"type": "text/javascript",
										"id": "af084b33-fe83-4231-b75f-87f00d867771"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"eval(pm.environment.get('preRequestSignatures'))"
										],
										"type": "text/javascript",
										"id": "91070feb-2580-44a2-9153-7f43550e7a2d"
									}
								}
							],
							"id": "e7d7d71d-6d66-4c6d-bbc6-0680f95d894d",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"access_token\": {\n        \"access\": [\n            {\n                \"type\": \"quote\",\n                \"actions\": [\n                    \"create\", \"read\"\n                ]\n            }\n        ]\n    },\n    \"client\": \"{{clientWalletAddress}}\"\n}\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{senderOpenPaymentsAuthHost}}/",
									"host": [
										"{{senderOpenPaymentsAuthHost}}"
									],
									"path": [
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Quote",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"const body = pm.response.json();",
											"pm.environment.set(\"quoteId\", body.id.split(\"/\").pop());",
											"pm.environment.set(\"quoteDebitAmount\", JSON.stringify(body.debitAmount))",
											"pm.environment.set(\"quoteReceiveAmount\", JSON.stringify(body.receiveAmount))",
											""
										],
										"type": "text/javascript",
										"id": "6a3a8f09-3e4e-481f-8c93-0abd44df9f38"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"if(pm.environment.get('preRequestHost')){",
											"    eval(pm.environment.get('preRequestHost'))",
											"}",
											"eval(pm.environment.get('preRequestSignatures'))"
										],
										"type": "text/javascript",
										"id": "934e9d77-d853-4600-aa08-5cd09da23b6e"
									}
								}
							],
							"id": "72c63345-5d9e-4280-b0d0-b97d93f70801",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "GNAP {{accessToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"walletAddress\": \"{{senderWalletAddress}}\",\n    \"receiver\": \"{{receiverOpenPaymentsHost}}/incoming-payments/{{incomingPaymentId}}\",\n    \"method\": \"ilp\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{senderOpenPaymentsHost}}/quotes",
									"host": [
										"{{senderOpenPaymentsHost}}"
									],
									"path": [
										"quotes"
									]
								}
							},
							"response": []
						},
						{
							"name": "Grant Request Outgoing Payment",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const body = pm.response.json();",
											"pm.environment.set(\"accessToken\", body?.access_token?.value);",
											"pm.environment.set(\"continueToken\", body.continue.access_token.value);",
											"pm.environment.set(\"continueId\", body.continue.uri.split(\"/\").pop());",
											""
										],
										"type": "text/javascript",
										"id": "1ebafd59-6ead-4822-8f45-378837d73ae4"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"eval(pm.environment.get('preRequestSignatures'))"
										],
										"type": "text/javascript",
										"id": "9bf269ba-34b5-4c56-b800-e03e3a2d6b44"
									}
								}
							],
							"id": "18d027da-b7d0-4763-a28e-02975c584b40",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"access_token\": {\n        \"access\": [\n            {\n                \"type\": \"outgoing-payment\",\n                \"actions\": [\n                    \"create\", \"read\", \"list\"\n                ],\n                \"identifier\": \"{{senderWalletAddress}}\",\n                \"limits\": {\n                    \"debitAmount\": {{quoteDebitAmount}},\n                    \"receiveAmount\": {{quoteReceiveAmount}}\n                }\n            }\n        ]\n    },\n    \"client\": \"{{clientWalletAddress}}\",\n    \"interact\": {\n        \"start\": [\n            \"redirect\"\n        ],\n        \"finish\": {\n            \"method\": \"redirect\",\n            \"uri\": \"https://example.com\",\n            \"nonce\": \"456\"\n        }\n    }\n}\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{senderOpenPaymentsAuthHost}}/",
									"host": [
										"{{senderOpenPaymentsAuthHost}}"
									],
									"path": [
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Continuation Request",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const body = pm.response.json();",
											"pm.environment.set(\"accessToken\", body.access_token.value);",
											"pm.environment.set(\"tokenId\", body.access_token.manage.split('/').pop())"
										],
										"type": "text/javascript",
										"id": "2e8210fc-a206-4970-a1b6-56cd719b8540"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"eval(pm.environment.get('preRequestSignatures'))"
										],
										"type": "text/javascript",
										"id": "4c96d3cb-8e12-4dfe-80ba-bf9aef9e511c"
									}
								}
							],
							"id": "84755154-9805-4dc9-b4a0-936b00cbaab4",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "GNAP {{continueToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n     \"interact_ref\": \"6d519566-234f-4c2e-b56f-6d4a305fc067\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{senderOpenPaymentsAuthHost}}/continue/{{continueId}}",
									"host": [
										"{{senderOpenPaymentsAuthHost}}"
									],
									"path": [
										"continue",
										"{{continueId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Outgoing Payment",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"if(pm.environment.get('preRequestHost')){",
											"    eval(pm.environment.get('preRequestHost'))",
											"}",
											"eval(pm.environment.get('preRequestSignatures'))"
										],
										"type": "text/javascript",
										"id": "3fbdbe2b-2722-4eb6-b451-e6480317f2a5"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"const body = pm.response.json();",
											"pm.environment.set(\"outgoingPaymentId\", body.id.split(\"/\").pop());",
											""
										],
										"type": "text/javascript",
										"id": "958958b6-0727-40e8-9d7c-1fec0bf29fb0"
									}
								}
							],
							"id": "a3e33afd-1fb4-46d0-afc2-6e6322c131f9",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "GNAP {{accessToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"walletAddress\": \"{{senderWalletAddress}}\",\n    \"quoteId\": \"{{senderWalletAddress}}/quotes/{{quoteId}}\",\n    \"metadata\": {\n        \"description\": \"Free Money!\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{senderOpenPaymentsHost}}/outgoing-payments",
									"host": [
										"{{senderOpenPaymentsHost}}"
									],
									"path": [
										"outgoing-payments"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Outgoing Payment",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											""
										],
										"type": "text/javascript",
										"id": "d049a56f-588f-43f7-a2ff-7ae716d1f5b0"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"if(pm.environment.get('preRequestHost')){",
											"    eval(pm.environment.get('preRequestHost'))",
											"}",
											"eval(pm.environment.get('preRequestSignatures'))"
										],
										"type": "text/javascript",
										"id": "00f9791d-f4fa-44c9-a73d-6043d6b2bc1c"
									}
								}
							],
							"id": "87279187-e0e3-435b-9504-3d43ce90577a",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "GNAP {{accessToken}}"
									}
								],
								"url": {
									"raw": "{{senderOpenPaymentsHost}}/outgoing-payments/{{outgoingPaymentId}}",
									"host": [
										"{{senderOpenPaymentsHost}}"
									],
									"path": [
										"outgoing-payments",
										"{{outgoingPaymentId}}"
									]
								}
							},
							"response": []
						}
					],
					"id": "025585d1-b75b-4a44-af33-6c602d0a89c7"
				},
				{
					"name": "Admin API -  only locally",
					"item": [
						{
							"name": "Peer-to-Peer Payment",
							"item": [
								{
									"name": "Create Receiver (remote Incoming Payment)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const body = pm.response.json();",
													"",
													"pm.environment.set(\"receiverId\", body.data.createReceiver.receiver.id);",
													"pm.expect(pm.environment.get(\"receiverId\")).to.be.a('string');"
												],
												"type": "text/javascript",
												"id": "28b54bbf-5c28-42e5-aebb-5d40457694a3"
											}
										}
									],
									"id": "badb698a-583f-4816-9988-4ac53bd21e4d",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "graphql"
										},
										"url": {
											"raw": "{{RafikiGraphqlHost}}/graphql",
											"host": [
												"{{RafikiGraphqlHost}}"
											],
											"path": [
												"graphql"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Quote",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const body = pm.response.json();",
													"",
													"pm.environment.set(\"quoteId\", body.data.createQuote.quote.id);",
													"pm.expect(pm.environment.get(\"quoteId\")).to.be.a('string');"
												],
												"type": "text/javascript",
												"id": "4cfcc6d8-da3f-4787-9847-81b374d16648"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"",
													"const getWalletAddressesQuery = `",
													"query GetWalletAddresses {",
													"    walletAddresses {",
													"        edges {",
													"            cursor",
													"            node {",
													"                id",
													"                publicName",
													"                url",
													"            }",
													"        }",
													"    }",
													"}`",
													"",
													"const postRequest = {",
													"  url: `${pm.environment.get(\"RafikiGraphqlHost\")}/graphql`,",
													"  method: 'POST',",
													"  body: {",
													"    mode: 'graphql',",
													"    graphql: {",
													"        query:getWalletAddressesQuery",
													"    }",
													"  }",
													"};",
													"",
													"",
													"pm.sendRequest(postRequest, (error, response) => {",
													"    const body = response.json();",
													"    const gfranklinWalletAddressId = body.data.walletAddresses.edges.map(e => e.node).find(node => node.publicName === 'Grace Franklin')?.id",
													"",
													"    pm.environment.set(\"gfranklinWalletAddressId\", gfranklinWalletAddressId)",
													"});"
												],
												"type": "text/javascript",
												"id": "7b1d9dca-222f-46ea-b4e8-63c5f72685a6"
											}
										}
									],
									"id": "2ae8d49f-4a21-407d-aea9-d7011dbbc2d1",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "graphql"
										},
										"url": {
											"raw": "{{RafikiGraphqlHost}}/graphql",
											"host": [
												"{{RafikiGraphqlHost}}"
											],
											"path": [
												"graphql"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Outgoing Payment",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const body = pm.response.json();",
													"",
													"pm.environment.set(\"outgoingPaymentId\", body.data.createOutgoingPayment.payment.id);",
													"pm.expect(pm.environment.get(\"outgoingPaymentId\")).to.be.a('string');"
												],
												"type": "text/javascript",
												"id": "04dd781e-3df1-4904-8612-b0e4f66fdde9"
											}
										}
									],
									"id": "a29fb63d-67b8-443f-a778-63b527c85574",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "graphql"
										},
										"url": {
											"raw": "{{RafikiGraphqlHost}}/graphql",
											"host": [
												"{{RafikiGraphqlHost}}"
											],
											"path": [
												"graphql"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Outgoing Payment",
									"id": "7582156c-fd25-445b-be9d-595e0b38670d",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "graphql"
										},
										"url": {
											"raw": "{{RafikiGraphqlHost}}/graphql",
											"host": [
												"{{RafikiGraphqlHost}}"
											],
											"path": [
												"graphql"
											]
										}
									},
									"response": []
								}
							],
							"id": "9f730d1e-05e2-4d02-8b8b-e5fe97e56b50"
						},
						{
							"name": "Peer-to-Peer Cross Currency Payment",
							"item": [
								{
									"name": "Create Receiver (remote Incoming Payment)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const body = pm.response.json();",
													"",
													"pm.environment.set(\"receiverId\", body.data.createReceiver.receiver.id);",
													"pm.expect(pm.environment.get(\"receiverId\")).to.be.a('string');"
												],
												"type": "text/javascript",
												"id": "6d699551-b593-4091-a0ab-1d33cae93cf4"
											}
										}
									],
									"id": "c7f593a8-797f-4984-b173-86bbf79bbbda",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "graphql"
										},
										"url": {
											"raw": "{{RafikiGraphqlHost}}/graphql",
											"host": [
												"{{RafikiGraphqlHost}}"
											],
											"path": [
												"graphql"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Quote",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const body = pm.response.json();",
													"",
													"pm.environment.set(\"quoteId\", body.data.createQuote.quote.id);",
													"pm.expect(pm.environment.get(\"quoteId\")).to.be.a('string');"
												],
												"type": "text/javascript",
												"id": "b1317347-1f5b-48ec-872c-3d0a28a78bb9"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"",
													"const getWalletAddressesQuery = `",
													"query GetWalletAddresses {",
													"    walletAddresses {",
													"        edges {",
													"            cursor",
													"            node {",
													"                id",
													"                publicName",
													"                url",
													"            }",
													"        }",
													"    }",
													"}`",
													"",
													"const postRequest = {",
													"  url: `${pm.environment.get(\"RafikiGraphqlHost\")}/graphql`,",
													"  method: 'POST',",
													"  body: {",
													"    mode: 'graphql',",
													"    graphql: {",
													"        query:getWalletAddressesQuery",
													"    }",
													"  }",
													"};",
													"",
													"",
													"pm.sendRequest(postRequest, (error, response) => {",
													"    const body = response.json();",
													"    const gfranklinWalletAddressId = body.data.walletAddresses.edges.map(e => e.node).find(node => node.publicName === 'Grace Franklin')?.id",
													"",
													"    pm.environment.set(\"gfranklinWalletAddressId\", gfranklinWalletAddressId)",
													"});"
												],
												"type": "text/javascript",
												"id": "21d259cb-27c2-4088-b025-a267ad48f566"
											}
										}
									],
									"id": "f9c060f5-d007-4ef2-80a2-0dbf0dc0d7f1",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "graphql"
										},
										"url": {
											"raw": "{{RafikiGraphqlHost}}/graphql",
											"host": [
												"{{RafikiGraphqlHost}}"
											],
											"path": [
												"graphql"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Outgoing Payment",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const body = pm.response.json();",
													"",
													"pm.environment.set(\"outgoingPaymentId\", body.data.createOutgoingPayment.payment.id);",
													"pm.expect(pm.environment.get(\"outgoingPaymentId\")).to.be.a('string');"
												],
												"type": "text/javascript",
												"id": "4ee34a43-b89b-4835-9603-fe685311f5dd"
											}
										}
									],
									"id": "bfc34a00-5b5b-418f-b722-0bcc144b2d36",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "graphql"
										},
										"url": {
											"raw": "{{RafikiGraphqlHost}}/graphql",
											"host": [
												"{{RafikiGraphqlHost}}"
											],
											"path": [
												"graphql"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Outgoing Payment",
									"id": "9c99a039-5bfe-42a9-a6db-68dce640b327",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "graphql"
										},
										"url": {
											"raw": "{{RafikiGraphqlHost}}/graphql",
											"host": [
												"{{RafikiGraphqlHost}}"
											],
											"path": [
												"graphql"
											]
										}
									},
									"response": []
								}
							],
							"id": "65bf9f26-396c-41b2-b12d-dc07ebfdf441"
						}
					],
					"id": "36b4e26f-a5b0-4291-b907-585a5f16faa2"
				}
			],
			"id": "4034f62c-b2ed-4cd2-9c05-2a23ec1a4734"
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				],
				"id": "84a38662-5fe8-4a99-be9e-5e81c271364a"
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				],
				"id": "8127b6f2-4c5e-498d-b111-c6d3f74a0c62"
			}
		}
	]
}